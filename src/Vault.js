import { MarkdownView } from "obsidian";
/**
 * Tries to get the active view from obsidian and returns a dictionary containing the file name, folder path,
 * file path, and vault path of the currently opened / focused note.
 *
 * @param app The current app handle (this.app from ExecuteCodePlugin)
 * @returns { fileName: string; folder: string; filePath: string; vaultPath: string } A dictionary containing the
 * file name, folder path, file path, and vault path of the currently opened / focused note.
 */
export function getVaultVariables(app) {
    const activeView = app.workspace.getActiveViewOfType(MarkdownView);
    if (activeView === null) {
        return null;
    }
    const adapter = app.vault.adapter;
    const vaultPath = adapter.getBasePath();
    const folder = activeView.file.parent.path;
    const fileName = activeView.file.name;
    const filePath = activeView.file.path;
    const theme = document.body.classList.contains("theme-light") ? "light" : "dark";
    return {
        vaultPath: vaultPath,
        folder: folder,
        fileName: fileName,
        filePath: filePath,
        theme: theme
    };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVmF1bHQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJWYXVsdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUMsWUFBWSxFQUFDLE1BQU0sVUFBVSxDQUFDO0FBRXRDOzs7Ozs7O0dBT0c7QUFDSCxNQUFNLFVBQVUsaUJBQWlCLENBQUMsR0FBUTtJQUN6QyxNQUFNLFVBQVUsR0FBRyxHQUFHLENBQUMsU0FBUyxDQUFDLG1CQUFtQixDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ25FLElBQUksVUFBVSxLQUFLLElBQUksRUFBRTtRQUN4QixPQUFPLElBQUksQ0FBQztLQUNaO0lBRUQsTUFBTSxPQUFPLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxPQUE0QixDQUFDO0lBQ3ZELE1BQU0sU0FBUyxHQUFHLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUN4QyxNQUFNLE1BQU0sR0FBRyxVQUFVLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUM7SUFDM0MsTUFBTSxRQUFRLEdBQUcsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUE7SUFDckMsTUFBTSxRQUFRLEdBQUcsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUE7SUFFckMsTUFBTSxLQUFLLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQztJQUVqRixPQUFPO1FBQ04sU0FBUyxFQUFFLFNBQVM7UUFDcEIsTUFBTSxFQUFFLE1BQU07UUFDZCxRQUFRLEVBQUUsUUFBUTtRQUNsQixRQUFRLEVBQUUsUUFBUTtRQUNsQixLQUFLLEVBQUUsS0FBSztLQUNaLENBQUE7QUFDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHR5cGUge0FwcCwgRmlsZVN5c3RlbUFkYXB0ZXJ9IGZyb20gXCJvYnNpZGlhblwiO1xyXG5pbXBvcnQge01hcmtkb3duVmlld30gZnJvbSBcIm9ic2lkaWFuXCI7XHJcblxyXG4vKipcclxuICogVHJpZXMgdG8gZ2V0IHRoZSBhY3RpdmUgdmlldyBmcm9tIG9ic2lkaWFuIGFuZCByZXR1cm5zIGEgZGljdGlvbmFyeSBjb250YWluaW5nIHRoZSBmaWxlIG5hbWUsIGZvbGRlciBwYXRoLFxyXG4gKiBmaWxlIHBhdGgsIGFuZCB2YXVsdCBwYXRoIG9mIHRoZSBjdXJyZW50bHkgb3BlbmVkIC8gZm9jdXNlZCBub3RlLlxyXG4gKlxyXG4gKiBAcGFyYW0gYXBwIFRoZSBjdXJyZW50IGFwcCBoYW5kbGUgKHRoaXMuYXBwIGZyb20gRXhlY3V0ZUNvZGVQbHVnaW4pXHJcbiAqIEByZXR1cm5zIHsgZmlsZU5hbWU6IHN0cmluZzsgZm9sZGVyOiBzdHJpbmc7IGZpbGVQYXRoOiBzdHJpbmc7IHZhdWx0UGF0aDogc3RyaW5nIH0gQSBkaWN0aW9uYXJ5IGNvbnRhaW5pbmcgdGhlXHJcbiAqIGZpbGUgbmFtZSwgZm9sZGVyIHBhdGgsIGZpbGUgcGF0aCwgYW5kIHZhdWx0IHBhdGggb2YgdGhlIGN1cnJlbnRseSBvcGVuZWQgLyBmb2N1c2VkIG5vdGUuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gZ2V0VmF1bHRWYXJpYWJsZXMoYXBwOiBBcHApIHtcclxuXHRjb25zdCBhY3RpdmVWaWV3ID0gYXBwLndvcmtzcGFjZS5nZXRBY3RpdmVWaWV3T2ZUeXBlKE1hcmtkb3duVmlldyk7XHJcblx0aWYgKGFjdGl2ZVZpZXcgPT09IG51bGwpIHtcclxuXHRcdHJldHVybiBudWxsO1xyXG5cdH1cclxuXHJcblx0Y29uc3QgYWRhcHRlciA9IGFwcC52YXVsdC5hZGFwdGVyIGFzIEZpbGVTeXN0ZW1BZGFwdGVyO1xyXG5cdGNvbnN0IHZhdWx0UGF0aCA9IGFkYXB0ZXIuZ2V0QmFzZVBhdGgoKTtcclxuXHRjb25zdCBmb2xkZXIgPSBhY3RpdmVWaWV3LmZpbGUucGFyZW50LnBhdGg7XHJcblx0Y29uc3QgZmlsZU5hbWUgPSBhY3RpdmVWaWV3LmZpbGUubmFtZVxyXG5cdGNvbnN0IGZpbGVQYXRoID0gYWN0aXZlVmlldy5maWxlLnBhdGhcclxuXHJcblx0Y29uc3QgdGhlbWUgPSBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5jb250YWlucyhcInRoZW1lLWxpZ2h0XCIpID8gXCJsaWdodFwiIDogXCJkYXJrXCI7XHJcblxyXG5cdHJldHVybiB7XHJcblx0XHR2YXVsdFBhdGg6IHZhdWx0UGF0aCxcclxuXHRcdGZvbGRlcjogZm9sZGVyLFxyXG5cdFx0ZmlsZU5hbWU6IGZpbGVOYW1lLFxyXG5cdFx0ZmlsZVBhdGg6IGZpbGVQYXRoLFxyXG5cdFx0dGhlbWU6IHRoZW1lXHJcblx0fVxyXG59XHJcbiJdfQ==