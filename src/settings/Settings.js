/**
 * The default settings for the extensions as implementation of the ExecutorSettings interface.
 */
export const DEFAULT_SETTINGS = {
    lastOpenLanguageTab: undefined,
    releaseNote2_0_0wasShowed: false,
    persistentOuput: false,
    timeout: 10000,
    allowInput: true,
    wslMode: false,
    shellWSLMode: false,
    onlyCurrentBlock: false,
    nodePath: "node",
    nodeArgs: "",
    jsFileExtension: "js",
    jsInject: "",
    tsPath: "ts-node",
    tsArgs: "",
    tsInject: "",
    latexCompilerPath: "lualatex",
    latexCompilerArgs: "-interaction=nonstopmode",
    latexDoFilter: true,
    latexTexfotPath: "texfot",
    latexTexfotArgs: "--quiet",
    latexDocumentclass: "article",
    latexAdaptFont: "obsidian",
    latexKeepLog: false,
    latexSubprocessesUseShell: false,
    latexMaxFigures: 10,
    latexFigureTitlePattern: /[^\n][^%`]*\\title\s*\{(?<name>[^\}]*)\}/.source,
    latexDoCrop: false,
    latexCropPath: "pdfcrop",
    latexCropArgs: "--quiet",
    latexCropNoStandalone: true,
    latexCropNoPagenum: true,
    latexSaveSvg: "poppler",
    latexSvgPath: "pdftocairo",
    latexSvgArgs: "-svg",
    latexInkscapePath: "inkscape",
    latexInkscapeArgs: '--pages=all --export-plain-svg',
    latexSavePdf: true,
    latexSavePng: false,
    latexPngPath: "pdftocairo",
    latexPngArgs: "-singlefile -png",
    latexOutputEmbeddings: true,
    latexInvertFigures: true,
    latexCenterFigures: true,
    latexInject: "",
    leanPath: "lean",
    leanArgs: "",
    leanInject: "",
    luaPath: "lua",
    luaArgs: "",
    luaFileExtension: "lua",
    luaInject: "",
    dartPath: "dart",
    dartArgs: "",
    dartFileExtension: "dart",
    dartInject: "",
    csPath: "dotnet-script",
    csArgs: "",
    csFileExtension: "csx",
    csInject: "",
    pythonPath: "python",
    pythonArgs: "",
    pythonEmbedPlots: true,
    pythonFileExtension: "py",
    pythonInject: "",
    shellPath: "bash",
    shellArgs: "",
    shellFileExtension: "sh",
    shellInject: "",
    batchPath: "call",
    batchArgs: "",
    batchFileExtension: "bat",
    batchInject: "",
    groovyPath: "groovy",
    groovyArgs: "",
    groovyFileExtension: "groovy",
    groovyInject: "",
    golangPath: "go",
    golangArgs: "run",
    golangFileExtension: "go",
    goInject: "",
    javaPath: "java",
    javaArgs: "-ea",
    javaFileExtension: "java",
    javaInject: "",
    maxPrologAnswers: 15,
    prologInject: "",
    powershellPath: "powershell",
    powershellArgs: "-file",
    powershellFileExtension: "ps1",
    powershellInject: "$OutputEncoding = [console]::InputEncoding = [console]::OutputEncoding = New-Object System.Text.UTF8Encoding",
    powershellEncoding: "latin1",
    cargoPath: "cargo",
    cargoEvalArgs: "",
    rustInject: "",
    cppRunner: "cling",
    cppFileExtension: "cpp",
    cppInject: "",
    cppArgs: "",
    cppUseMain: false,
    clingPath: "cling",
    clingArgs: "",
    clingStd: "c++17",
    rustFileExtension: "rs",
    RPath: "Rscript",
    RArgs: "",
    REmbedPlots: true,
    RFileExtension: "R",
    rInject: "",
    kotlinPath: "kotlinc",
    kotlinArgs: "-script",
    kotlinFileExtension: "kts",
    kotlinInject: "",
    swiftPath: "swift",
    swiftArgs: "",
    swiftFileExtension: "swift",
    swiftInject: "",
    runghcPath: "runghc",
    ghcPath: "ghc",
    ghciPath: "ghci",
    useGhci: false,
    haskellInject: "",
    mathematicaPath: "wolframscript",
    mathematicaArgs: "-file",
    mathematicaFileExtension: "wls",
    mathematicaInject: "",
    scalaPath: "scala",
    scalaArgs: "",
    scalaFileExtension: "scala",
    scalaInject: "",
    racketPath: "racket",
    racketArgs: "",
    racketFileExtension: "rkt",
    racketInject: "#lang racket",
    fsharpPath: "dotnet",
    fsharpArgs: "",
    fsharpInject: "",
    fsharpFileExtension: "fsx",
    cArgs: "",
    cUseMain: true,
    cInject: "",
    rubyPath: "ruby",
    rubyArgs: "",
    rubyFileExtension: "rb",
    rubyInject: "",
    sqlPath: "psql",
    sqlArgs: "-d <database> -U <user> -f",
    sqlInject: "",
    octavePath: "octave",
    octaveArgs: "-q",
    octaveFileExtension: "m",
    octaveInject: "figure('visible','off')  # Necessary to embed plots",
    maximaPath: "maxima",
    maximaArgs: "-qb",
    maximaFileExtension: "mx",
    maximaInject: "",
    applescriptPath: "osascript",
    applescriptArgs: "",
    applescriptFileExtension: "scpt",
    applescriptInject: "",
    zigPath: "zig",
    zigArgs: "run",
    zigInject: "",
    ocamlPath: "ocaml",
    ocamlArgs: "",
    ocamlInject: "",
    phpPath: "php",
    phpArgs: "",
    phpFileExtension: "php",
    phpInject: "",
    jsInteractive: true,
    tsInteractive: false,
    csInteractive: false,
    latexInteractive: false,
    leanInteractive: false,
    luaInteractive: false,
    dartInteractive: false,
    pythonInteractive: true,
    cppInteractive: false,
    prologInteractive: false,
    shellInteractive: false,
    batchInteractive: false,
    bashInteractive: false,
    groovyInteractive: false,
    rInteractive: false,
    goInteractive: false,
    rustInteractive: false,
    javaInteractive: false,
    powershellInteractive: false,
    kotlinInteractive: false,
    swiftInteractive: false,
    mathematicaInteractive: false,
    haskellInteractive: false,
    scalaInteractive: false,
    fsharpInteractive: false,
    cInteractive: false,
    racketInteractive: false,
    rubyInteractive: false,
    sqlInteractive: false,
    octaveInteractive: false,
    maximaInteractive: false,
    applescriptInteractive: false,
    zigInteractive: false,
    ocamlInteractive: false,
    phpInteractive: false,
};
//# sourceMappingURL=data:application/json;base64,